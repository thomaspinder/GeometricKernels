:py:mod:`geometric_kernels`
===========================

.. py:module:: geometric_kernels

.. autoapi-nested-parse::

   The library root. The kernel classes are contained within the
   :py:mod:`kernels <geometric_kernels.kernels>` package. They need to be paired
   with one of the space classes from the
   :py:mod:`spaces <geometric_kernels.spaces>` package.

   The :py:mod:`frontends <geometric_kernels.frontends>` package contains kernel
   wrapper classes compatible with Gaussian process libraries like
   `GPFlow <https://www.gpflow.org/>`_, `GPyTorch <https://gpytorch.ai/>`_,
   and `GPJax <https://github.com/JaxGaussianProcesses/GPJax>`_.

   The :py:mod:`lab_extras <geometric_kernels.lab_extras>` package contains our
   custom additions to `LAB <https://github.com/wesselb/lab>`_, the framework that
   allows our library to be backend-independent. This is an internal part of our
   library.



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   frontends/index.rst
   kernels/index.rst
   lab_extras/index.rst
   spaces/index.rst
   utils/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   _logging/index.rst
   jax/index.rst
   tensorflow/index.rst
   torch/index.rst
   types/index.rst
   version/index.rst


Package Contents
----------------

.. py:function:: cosh(x)

   Compute hyperbolic cosine using the formula

   .. math::
       \textrm{cosh}(x) = \frac{\exp(x) + \exp(-x)}{2}.


.. py:function:: degree(a)

   Given an adjacency matrix `a`, return a diagonal matrix
   with the col-sums of `a` as main diagonal - this is the
   degree matrix representing the number of nodes each node
   is connected to.


.. py:function:: eigenpairs(L, k)

   Obtain the k highest eigenpairs of a symmetric PSD matrix L.


.. py:function:: from_numpy(_, b)

   Converts the array `b` to a tensor of the same backend as `a`


.. py:function:: logspace(start, stop, num = 50)

   Return numbers spaced evenly on a log scale.


.. py:function:: set_value(a, index, value)

   Set a[index] = value.
   This operation is not done in place and a new array is returned.


.. py:function:: sinh(x)

   Compute hyperbolic sine using the formula

   .. math::
       \textrm{sinh}(x) = \frac{\exp(x) - \exp(-x)}{2}.


.. py:function:: take_along_axis(a, index, axis = 0)

   Gathers elements of `a` along `axis` at `index` locations.


.. py:function:: trapz(y, x, dx = 1.0, axis = -1)

   Integrate along the given axis using the trapezoidal rule.


